{"ast":null,"code":"var _jsxFileName = \"/home/rathil/git/personal/TempJavaScript/src/components/MovieList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieList = props => {\n  _s();\n\n  const getMovieRequest = async () => {\n    const url = \"https://swapi.dev/api/films/?format=json\";\n    const response = await fetch(url);\n    const responseJson = await response.json();\n\n    if (responseJson.results) {\n      props.setMovies(responseJson.results);\n    }\n  };\n\n  useEffect(() => {\n    getMovieRequest();\n  }, []);\n\n  const addClickHandler = movie => {\n    props.addClickHandler(movie);\n  };\n\n  const sortMethods = {\n    none: {\n      method: (a, b) => null\n    },\n    ByYear: {\n      method: (a, b) => a.release_date < b.release_date ? -1 : 1\n    },\n    ById: {\n      method: (a, b) => a.episode_id < b.episode_id ? -1 : 1\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.movies.sort(sortMethods[props.sortState].method).map(movie => {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"moviesList\",\n        onClick: () => addClickHandler(movie),\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"EPISODE \", movie.episode_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"EPISODE\", movie.episode_id, \"-\", movie.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: movie.release_date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, movie.episode_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = MovieList;\nexport default MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useEffect","MovieList","props","getMovieRequest","url","response","fetch","responseJson","json","results","setMovies","addClickHandler","movie","sortMethods","none","method","a","b","ByYear","release_date","ById","episode_id","movies","sort","sortState","map","title"],"sources":["/home/rathil/git/personal/TempJavaScript/src/components/MovieList.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\nconst MovieList = (props) => {\r\n  const getMovieRequest = async () => {\r\n\t\tconst url = \"https://swapi.dev/api/films/?format=json\";\r\n\r\n\t\tconst response = await fetch(url);\r\n\t\tconst responseJson = await response.json();\r\n\r\n\t\tif (responseJson.results) {\r\n\t\t\tprops.setMovies(responseJson.results);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetMovieRequest();\r\n\t}, []);\r\n\r\n  const addClickHandler = (movie) => {\r\n    props.addClickHandler(movie);\r\n  };\r\n\r\n  const sortMethods = {\r\n    none: { method: (a, b) => null },\r\n    ByYear: { method: (a, b) => (a.release_date < b.release_date ? -1 : 1) },\r\n    ById: { method: (a, b) => (a.episode_id < b.episode_id ? -1 : 1) },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n     \r\n      {props.movies.sort(sortMethods[props.sortState].method).map((movie) =>{\r\n        return (\r\n          <ul\r\n            key={movie.episode_id}\r\n            className=\"moviesList\"\r\n            onClick={() => addClickHandler(movie)}\r\n          >\r\n            <li>EPISODE {movie.episode_id}</li>\r\n            <li>\r\n              EPISODE{movie.episode_id}-{movie.title}\r\n            </li>\r\n            <li>{movie.release_date}</li>\r\n          </ul>\r\n        \r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default MovieList;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAAA;;EAC3B,MAAMC,eAAe,GAAG,YAAY;IACpC,MAAMC,GAAG,GAAG,0CAAZ;IAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;IACA,MAAMG,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;;IAEA,IAAID,YAAY,CAACE,OAAjB,EAA0B;MACzBP,KAAK,CAACQ,SAAN,CAAgBH,YAAY,CAACE,OAA7B;IACA;EACD,CATA;;EAWDT,SAAS,CAAC,MAAM;IACfG,eAAe;EACf,CAFQ,EAEN,EAFM,CAAT;;EAIC,MAAMQ,eAAe,GAAIC,KAAD,IAAW;IACjCV,KAAK,CAACS,eAAN,CAAsBC,KAAtB;EACD,CAFD;;EAIA,MAAMC,WAAW,GAAG;IAClBC,IAAI,EAAE;MAAEC,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAU;IAApB,CADY;IAElBC,MAAM,EAAE;MAAEH,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACG,YAAF,GAAiBF,CAAC,CAACE,YAAnB,GAAkC,CAAC,CAAnC,GAAuC;IAA5D,CAFU;IAGlBC,IAAI,EAAE;MAAEL,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACK,UAAF,GAAeJ,CAAC,CAACI,UAAjB,GAA8B,CAAC,CAA/B,GAAmC;IAAxD;EAHY,CAApB;EAMA,oBACE;IAAA,UAEGnB,KAAK,CAACoB,MAAN,CAAaC,IAAb,CAAkBV,WAAW,CAACX,KAAK,CAACsB,SAAP,CAAX,CAA6BT,MAA/C,EAAuDU,GAAvD,CAA4Db,KAAD,IAAU;MACpE,oBACE;QAEE,SAAS,EAAC,YAFZ;QAGE,OAAO,EAAE,MAAMD,eAAe,CAACC,KAAD,CAHhC;QAAA,wBAKE;UAAA,uBAAaA,KAAK,CAACS,UAAnB;QAAA;UAAA;UAAA;UAAA;QAAA,QALF,eAME;UAAA,sBACUT,KAAK,CAACS,UADhB,OAC6BT,KAAK,CAACc,KADnC;QAAA;UAAA;UAAA;UAAA;QAAA,QANF,eASE;UAAA,UAAKd,KAAK,CAACO;QAAX;UAAA;UAAA;UAAA;QAAA,QATF;MAAA,GACOP,KAAK,CAACS,UADb;QAAA;QAAA;QAAA;MAAA,QADF;IAcD,CAfA;EAFH;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD,CA/CD;;GAAMpB,S;;KAAAA,S;AAgDN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}